
# ---------------------------------------------------------------------------
#
#                          Clang-format for mimicpp
#
# ---------------------------------------------------------------------------

---
Language: Cpp
Standard: Latest
IndentWidth: 4
TabWidth: 4
UseTab: Never
ColumnLimit: 0

# Miscellaneous

SeparateDefinitionBlocks: Always
CompactNamespaces: false
RequiresClausePosition: OwnLine
ShortNamespaceLines: 1
InsertBraces: true
InsertNewlineAtEOF: true
InsertTrailingCommas: None
RemoveParentheses: MultipleParentheses
RemoveSemicolon: true
FixNamespaceComments: false
CommentPragmas: '^ IWYU pragma:'
ReflowComments: true
LineEnding: DeriveLF

IntegerLiteralSeparator:
  Binary: 4
  BinaryMinDigits: 7
  Decimal: 3
  DecimalMinDigits: 5
  Hex: 4
  HexMinDigits: 7

# Empty lines

EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: Always

MaxEmptyLinesToKeep: 1
KeepEmptyLines:
  AtEndOfFile: true
  AtStartOfFile: true
  AtStartOfBlock: false

# Alignment

AlignAfterOpenBracket: AlwaysBreak
AlignArrayOfStructures: Right
AlignConsecutiveBitFields: None
AlignConsecutiveDeclarations: None
AlignConsecutiveAssignments: None
AlignEscapedNewlines: Left
AlignOperands: AlignAfterOperator
AlignTrailingComments: Always

AlignConsecutiveMacros:
  Enabled: true
  AcrossComments: true
AlignConsecutiveShortCaseStatements:
  Enabled: true
  AcrossComments: true

# Packing

BinPackArguments: false
BinPackParameters: false
PackConstructorInitializers: Never

AllowAllArgumentsOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: false
AllowBreakBeforeNoexceptSpecifier: OnlyWithParen

# Short forms

AllowShortBlocksOnASingleLine: Never
AllowShortCaseExpressionOnASingleLine: true
AllowShortCaseLabelsOnASingleLine: true
AllowShortCompoundRequirementOnASingleLine: true
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: None
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: false

# Breaks

BreakArrays: true
BreakAdjacentStringLiterals: true
BreakAfterAttributes: Leave
BreakAfterReturnType: Automatic
BreakBeforeBinaryOperators: NonAssignment
BreakBeforeConceptDeclarations: Always
BreakBeforeInlineASMColon: OnlyMultiline
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeColon
BreakInheritanceList: BeforeColon
BreakFunctionDefinitionParameters: false
BreakStringLiterals: true
BreakTemplateDeclarations: MultiLine
AlwaysBreakBeforeMultilineStrings: true

BreakBeforeBraces: Custom
BraceWrapping:
  AfterCaseLabel: true
  AfterClass: true
  AfterControlStatement: Always
  AfterEnum: true
  AfterFunction: true
  AfterNamespace: true
  AfterStruct: true
  AfterUnion: true
  AfterExternBlock: true
  BeforeCatch: true
  BeforeElse: true
  BeforeLambdaBody: false
  BeforeWhile: true
  IndentBraces: false
  SplitEmptyFunction: true
  SplitEmptyRecord: true
  SplitEmptyNamespace: true

# Breaks penalties

PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 0
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakOpenParenthesis: 0
PenaltyBreakScopeResolution: 500
PenaltyBreakString: 1000
PenaltyBreakTemplateDeclaration: 10
PenaltyExcessCharacter: 0
PenaltyIndentedWhitespace: 0
PenaltyReturnTypeOnItsOwnLine: 60

# Indentation

PPIndentWidth: -1
AccessModifierOffset: -4
NamespaceIndentation: All
RequiresExpressionIndentation: OuterScope
LambdaBodyIndentation: Signature
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4

IndentAccessModifiers: false
IndentCaseBlocks: false
IndentCaseLabels: false
IndentExternBlock: Indent
IndentGotoLabels: true
IndentPPDirectives: BeforeHash
IndentRequiresClause: true
IndentWrappedFunctionNames: false

# Spaces

Cpp11BracedListStyle: true
BitFieldColonSpacing: After
SpaceAroundPointerQualifiers: Default

SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true

SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: false
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpacesBeforeTrailingComments: 1

SpaceInEmptyBlock: false
SpacesInAngles: Never
SpacesInContainerLiterals: true
SpacesInParens: Never
SpacesInSquareBrackets: false
SpacesInLineCommentPrefix:
  Minimum: 1
  Maximum: -1

# Include and using definitions

SortIncludes: CaseInsensitive
SortUsingDeclarations: LexicographicNumeric
IncludeIsMainRegex: '(Test)?'
MainIncludeChar: Quote

IncludeBlocks: Preserve
IncludeCategories:
  - Regex: '^"(llvm|llvm-c|clang|clang-c)/'
    Priority: 2
  - Regex: '^(<|"(gtest|gmock|isl|json)/)'
    Priority: 3
  - Regex: '.*'
    Priority: 1

# Qualifiers alignment

PointerAlignment: Left
ReferenceAlignment: Left
QualifierAlignment: Leave

# Macros

StatementAttributeLikeMacros:
  - Q_EMIT

StatementMacros:
  - Q_UNUSED
  - QT_REQUIRE_VERSION

WhitespaceSensitiveMacros:
  - BOOST_PP_STRINGIZE
  - CF_SWIFT_NAME
  - NS_SWIFT_NAME
  - PP_STRINGIZE
  - STRINGIZE

AttributeMacros:
  - __capability

ForEachMacros:
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH

IfMacros:
  - KJ_IF_MAYBE
